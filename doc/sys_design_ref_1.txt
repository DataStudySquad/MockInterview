A part of the evaluation process for this promotion was passing a System Design interview. For those who aren't familiar, an interviewer might ask something along the lines of 'Design me TikTok' or 'Design me Youtube.' It is then up to the interviewee to gather the appropriate requirements and design the microservice architecture flow from scratch, all the while explaining tradeoffs (such as between different types of databases and where to implement various components), scaling best practices, minimizing latency, emphasizing availability, etc. I'm connected with a lot of developers on here and I know this can be a pain point for some Software Engineers/Managers and TPMs when it comes to interviewing at tech companies. As such, I want to share some resources I found incredibly useful in learning system design, particularly starting from scratch without an engineering degree:

System Design Interview by Alex Xu: this book does a great job teaching the fundamentals of system design from the ground up. It explains complex concepts very clearly and does a good job building from the basics to complex designs.

CodeKarle (https://lnkd.in/gZpH4i23): this developer very effectively and elaborately explains microservice architecture flow, with an emphasis on the path of a users' requests from end-to-end. His designs are very sophisticated and maybe overly intricate for what you'd need in an interview, but still a good reference.

Exponent (https://lnkd.in/gRTBZMx3): this channel depicts end-to-end mock interviews of what you can expect during a system design evaluation. It will give you a good idea of how interviewers might push back, dig deeper, etc. Some of the designs are a bit remedial, but overall a good resource to get comfortable with the interview setting.
